version: "3"

services:
  postgres:
    container_name: calendar-ps
    image: library/postgres:13
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    env_file: config/local/env.example
    environment:
      - POSTGRES_DB=calendar
      - POSTGRES_USER=calendar
      - POSTGRES_PASSWORD=calendar
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U calendar" ]
      interval: 1s
      timeout: 1s
      retries: 10
      start_period: 5s
    networks:
      - nwk
    expose:
      - "5432"

  django: &django
    container_name: calendar-gn
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: config/local/Dockerfile
    env_file: config/local/env.example
    environment:
      - DJANGO_SUPERUSER_PASSWORD=local-password
      - DJANGO_SUPERUSER_EMAIL=admin@local.ru
      - DB_NAME=calendar
      - DB_USER=calendar
      - DB_PASSWORD=calendar
    volumes:
      - ./src:/usr/src/app
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    networks:
      - nwk

  rabbit:
    image: rabbitmq:3.9-management
    restart: unless-stopped
    container_name: calendar-rt
    ports:
      - "5672"
      - "15672"
    networks:
      - nwk


  celeryworker:
    <<: *django
    ports: []
    container_name: calendar-cw
    depends_on:
      - postgres
      - rabbit
    command: /var/calendarapi/config/docker/start-celery-worker.sh
    networks:
      - nwk

  flower:
    <<: *django
    ports:
      - "32201:32201"
    container_name: calendar-flwr
    depends_on:
      - celeryworker
    command: /var/calendarapi/config/docker/start-flower.sh
    networks:
      - nwk

  celerybeat:
    <<: *django
    ports: [ ]
    container_name: calendar-cb
    depends_on:
      - celeryworker
    command: /var/calendarapi/config/docker/start-celery-beat.sh
    networks:
      - nwk

volumes:
  postgres-data:

networks:
  nwk:
